class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& mat) {
        int n=mat.size();
        int dp[n+1][n+1];
        sizeof(dp,1000000000,sizeof(dp));
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                dp[i][j]=100000000;
                if(i==0)
                    dp[i][j]=mat[i][j];
                else
                {if(j>0)
                    dp[i][j]=dp[i-1][j-1];
                 if(j<n-1)
                    dp[i][j]=min(dp[i][j],dp[i-1][j+1]);
                dp[i][j]=min(dp[i][j],dp[i-1][j])+mat[i][j];
                }
                cout<<dp[i][j]<<" ";
            }
            cout<<endl;
        }
                    int m=INT_MAX;
                    for(int i=0;i<n;i++)
                    m=min(m,dp[n-1][i]);
                    return m;
    }
};
