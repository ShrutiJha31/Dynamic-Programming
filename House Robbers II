class Solution {
public:
    int solve(vector<int>& nums){
           if(nums.size()==1)
        return nums[0];
    if(nums.size()==2)
        return max(nums[0],nums[1]);
    int dp[nums.size()+1];
    int n=nums.size();
    dp[1]=nums[0];
    dp[2]=nums[1];
    dp[3]=dp[1]+nums[2];
    for(int i=4;i<=n;i++)
        dp[i]=max(dp[i-2],dp[i-3])+nums[i-1];
    
    int m=INT_MIN;
    for(int i=1;i<=n;i++)
        m=max(m,dp[i]);
    return m;
    }
    int rob(vector<int>& nums) {
        
        if(nums.size()==1)
            return nums[0];
        vector<int>v,v1;
        for(int i=1;i<nums.size();i++)
            v.push_back(nums[i]);
        for(int i=0;i<nums.size()-1;i++)
            v1.push_back(nums[i]);
     return max(solve(v),solve(v1));
    }
};
