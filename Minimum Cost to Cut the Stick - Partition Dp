class Solution {
public:
    int solve(int i,int j, vector<int>& cuts, vector<vector<int>>&dp)
    {
        if(i>j)
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
       
        int m=1e8;
        for(int k=i;k<=j;k++)
        {
            if(j<cuts.size()-1&&i>=1)
            m=min(m,cuts[j+1]-cuts[i-1]+solve(i,k-1,cuts,dp)+solve(k+1,j,cuts,dp));
        }
        return dp[i][j]=m;
            
    }
    int minCost(int n, vector<int>& cuts) {
    
       cuts.push_back(0);
        cuts.push_back(n);
        sort(cuts.begin(),cuts.end());
            vector<vector<int>>dp(cuts.size()+1,vector<int>(cuts.size()+1,-1));
        return solve(1,cuts.size()-2,cuts,dp);
        
    }
};
