class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int t) {
        int s=0;
        for(int i=0;i<nums.size();i++)
        {
            s+=nums[i];
            
        }
        int n=nums.size();
        if(t>s||(t+s)%2==1)
            return 0;
        int dp[n+1][s+1];
        memset(dp,0,sizeof(dp));
        for(int i=0;i<=n;i++)
            dp[i][0]=1;
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=s;j++)
            {
                if(j<nums[i-1])
                    dp[i][j]=dp[i-1][j];
                else
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i-1]];
                //cout<<dp[i][j]<<" ";
            }
            //cout<<endl;
        }
        if(nums.size()==1&&t==nums[0])
            return 1;
        int s1=(s+t)/2;
        int cnt=0;
      if(s1<0)
          return 0;
        return dp[n][s1];
    }
};
